Our KWIC consists of an object oriented architecture style where we have a master control class and we seperated all the functions that the KWIC must consist of into different classes. The classes that we will have are input, Output, Circular Shift, Alphabetizer, Input Medium, and Output Medium. The circular shift will have attributes like Set char, char, word and the alphabetizer will have attributes like alph and itn. The master control class will be able to communicate with all the other classes while the circular shift and alphabetizer class will handle the information given by the input and produce the output.
  Master Control - runs the program, coordinates all the classes, and handles the logging and cofiguring of components.
  Input - Takes input from the user and sets it up in a format that allows it to be sent to wherever it needs in the form it needs.
  Circular Shift - Generate all circular shifts of words and produces the list of rotated lines.
  Alphabetizer - Sorts the list generated by circular shift into alphabetical order.
  Output - Output the listing of the list of circular shifts that have been sorted by the alphabetizer.
  

Advantages of our architecture- The advantages of our architecture is that it is modular, reusable, and scalable and since we split all the functions into different classes, it also allows the program to be very organized which makes it very easy to understand from an outside perspective. If any programmer were wanting to work or maintain anything about our program, they will be able to very easily as we set it up for easy modibility. 

The disadvantages/risks- As of right now, this architecture is for a small scale program so if there were a lot of data sets that must be handled, there would be more classes that would have to be added as this would not suffice for large scale datasets. For example, if there were millions of lines, it would run into issues. 

Constraints- 
The language must be english
Systems with low RAM will not be able to sort large data sets.

Patterns- 
There is pipe and filter and implicit invocation architecture pattern.
